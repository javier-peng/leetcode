//O(n^2)
class Solution {
public:
    int numIdenticalPairs(vector<int>& nums) {
        int n = nums.size();
        int result = 0;
        for (int i=0;i<n;i++)
        {
            for (int j=i+1;j<n;j++)
            {
                if (nums[i]==nums[j])
                {
                    result++;
                }
            }
        }
        return result;
    }
};

//O(n)
class Solution {
public:
    int numIdenticalPairs(vector<int>& nums) {
        int n = nums.size();
        int result = 0;
        unordered_map<int, int> mp;
        for (int i=0;i<n;i++)
        {
            mp[nums[i]]++;
        }
        for (unordered_map<int,int>::iterator it=mp.begin();it!=mp.end();it++)
        {
            int k = it->second;
            result += ((k - 1)*k / 2);
        }
        return result;
    }
};
